{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useParams } from 'react';\nexport const usePwdReset = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [repassword, setRepassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('');\n  const resetPassword = async token => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`http://localhost:4000/user/resetPassword/${token}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password,\n          repassword\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error);\n      }\n      setIsLoading(false);\n      setStatus(data.status);\n    } catch (error) {\n      setError(error.message);\n      setIsLoading(false);\n    }\n  };\n  return {\n    password,\n    repassword,\n    setPassword,\n    setRepassword,\n    isLoading,\n    error,\n    resetPassword,\n    status\n  };\n};\n_s(usePwdReset, \"RpsA8eGrPmh94oNDAPOewtAhpqQ=\");","map":{"version":3,"names":["useState","useParams","usePwdReset","_s","password","setPassword","repassword","setRepassword","isLoading","setIsLoading","error","setError","status","setStatus","resetPassword","token","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message"],"sources":["D:/New folder/Hotel-Booking-and-Management-System/frontend/src/hooks/usePwdReset.js"],"sourcesContent":["import { useState,useParams } from 'react';\r\n\r\nexport const usePwdReset= () => {\r\n  const [password, setPassword] = useState('');\r\n  const [repassword, setRepassword] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState('');\r\n\r\n  const resetPassword = async (token) => {\r\n    \r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/user/resetPassword/${token}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ password, repassword }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error);\r\n      }\r\n      \r\n      setIsLoading(false);\r\n      setStatus(data.status);\r\n    } catch (error) {\r\n      setError(error.message);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return { password, repassword, setPassword, setRepassword, isLoading, error, resetPassword ,status};\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAE1C,OAAO,MAAMC,WAAW,GAAEA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMc,aAAa,GAAG,MAAOC,KAAK,IAAK;IAErCN,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAE,4CAA2CF,KAAM,EAAC,EAAE;QAChFG,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAElB,QAAQ;UAAEE;QAAW,CAAC;MAC/C,CAAC,CAAC;MAEF,MAAMiB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACb,KAAK,CAAC;MAC7B;MAEAD,YAAY,CAAC,KAAK,CAAC;MACnBI,SAAS,CAACU,IAAI,CAACX,MAAM,CAAC;IACxB,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACiB,OAAO,CAAC;MACvBlB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IAAEL,QAAQ;IAAEE,UAAU;IAAED,WAAW;IAAEE,aAAa;IAAEC,SAAS;IAAEE,KAAK;IAAEI,aAAa;IAAEF;EAAM,CAAC;AACrG,CAAC;AAACT,EAAA,CApCWD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}