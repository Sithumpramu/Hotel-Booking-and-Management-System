{"ast":null,"code":"var _s = $RefreshSig$();\n// In useUpdate hook\n\nexport const useUpdate = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const Update = async (password, newpassword) => {\n    setIsLoading(true);\n    setError(null);\n    const email = localStorage.getItem('email');\n    try {\n      const response = await fetch(`http://localhost:4000/user/update/${email}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password,\n          newpassword\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error);\n      }\n\n      // Password updated successfully\n      setIsLoading(false);\n      setStatus(data.status);\n      setTimeout(() => {\n        window.location.reload();\n      }, 4000);\n    } catch (error) {\n      setError(error.message);\n      setIsLoading(false);\n    }\n  };\n  return {\n    Update,\n    isLoading,\n    error,\n    status\n  };\n};\n_s(useUpdate, \"bnm738syXQAwJqOoZOeRmmri22Q=\");","map":{"version":3,"names":["useUpdate","_s","error","setError","useState","status","setStatus","isLoading","setIsLoading","Update","password","newpassword","email","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","setTimeout","window","location","reload","message"],"sources":["D:/Mern folder/frontend/src/hooks/useUpdate.js"],"sourcesContent":["// In useUpdate hook\r\n\r\n\r\nexport const useUpdate = () => {\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  \r\n\r\n  const Update = async (password, newpassword) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    const email= localStorage.getItem('email');\r\n\r\n\r\n    try {\r\n\r\n      const response = await fetch(`http://localhost:4000/user/update/${email}`,{\r\n        method: 'PATCH',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ password, newpassword }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      // Password updated successfully\r\n      setIsLoading(false);\r\n      setStatus(data.status);\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 4000);\r\n \r\n    } catch (error) {\r\n      setError(error.message);\r\n      setIsLoading(false);\r\n      \r\n    }\r\n  };\r\n\r\n  return { Update, isLoading, error,status };\r\n};\r\n\r\n\r\n"],"mappings":";AAAA;;AAGA,OAAO,MAAMA,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAIjD,MAAMK,MAAM,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,WAAW,KAAK;IAC9CH,YAAY,CAAC,IAAI,CAAC;IAClBL,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMS,KAAK,GAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAG1C,IAAI;MAEF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCJ,KAAM,EAAC,EAAC;QACxEK,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEX,QAAQ;UAAEC;QAAY,CAAC;MAChD,CAAC,CAAC;MAEF,MAAMW,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACpB,KAAK,CAAC;MAC7B;;MAEA;MACAM,YAAY,CAAC,KAAK,CAAC;MACnBF,SAAS,CAACgB,IAAI,CAACjB,MAAM,CAAC;MACtBqB,UAAU,CAAC,MAAM;QACfC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC1B,CAAC,EAAE,IAAI,CAAC;IAEV,CAAC,CAAC,OAAO3B,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAAC4B,OAAO,CAAC;MACvBtB,YAAY,CAAC,KAAK,CAAC;IAErB;EACF,CAAC;EAED,OAAO;IAAEC,MAAM;IAAEF,SAAS;IAAEL,KAAK;IAACG;EAAO,CAAC;AAC5C,CAAC;AAACJ,EAAA,CA3CWD,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}