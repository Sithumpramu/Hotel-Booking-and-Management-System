{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mern folder\\\\frontend\\\\src\\\\Pages\\\\PasswordReset.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { usePwdReset } from '../hooks/usePwdReset';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordReset = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const {\n    password,\n    repassword,\n    setPassword,\n    setRepassword,\n    isLoading,\n    error,\n    resetPassword\n  } = usePwdReset();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await resetPassword(token);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vh-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Password Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"New Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"repassword\",\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"repassword\",\n        value: repassword,\n        onChange: e => setRepassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? 'Loading...' : 'Reset Password'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordReset, \"ArIE9GfpbnpG6CajjAlih7S56Ew=\", false, function () {\n  return [useParams, usePwdReset];\n});\n_c = PasswordReset;\nexport default PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","useParams","usePwdReset","jsxDEV","_jsxDEV","PasswordReset","_s","token","password","repassword","setPassword","setRepassword","isLoading","error","resetPassword","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","disabled","style","color","_c","$RefreshReg$"],"sources":["D:/Mern folder/frontend/src/Pages/PasswordReset.js"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { usePwdReset } from '../hooks/usePwdReset';\r\n\r\nconst PasswordReset = () => {\r\n  const { token } = useParams();\r\n  const {password,repassword,setPassword,setRepassword,isLoading,error,resetPassword,} = usePwdReset();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await resetPassword(token);\r\n  };\r\n\r\n  return (\r\n    <div className='vh-100'>\r\n      <h2>Password Reset</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"password\">New Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n\r\n        <label htmlFor=\"repassword\">Confirm Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"repassword\"\r\n          value={repassword}\r\n          onChange={(e) => setRepassword(e.target.value)}\r\n        />\r\n\r\n        <button type=\"submit\" disabled={isLoading}>\r\n          {isLoading ? 'Loading...' : 'Reset Password'}\r\n        </button>\r\n\r\n        {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAM,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC7B,MAAM;IAACO,QAAQ;IAACC,UAAU;IAACC,WAAW;IAACC,aAAa;IAACC,SAAS;IAACC,KAAK;IAACC;EAAc,CAAC,GAAGZ,WAAW,CAAC,CAAC;EAEpG,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMH,aAAa,CAACP,KAAK,CAAC;EAC5B,CAAC;EAED,oBACEH,OAAA;IAAKc,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBf,OAAA;MAAAe,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBnB,OAAA;MAAMoB,QAAQ,EAAET,YAAa;MAAAI,QAAA,gBAC3Bf,OAAA;QAAOqB,OAAO,EAAC,UAAU;QAAAN,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/CnB,OAAA;QACEsB,IAAI,EAAC,UAAU;QACfC,EAAE,EAAC,UAAU;QACbC,KAAK,EAAEpB,QAAS;QAChBqB,QAAQ,EAAGb,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACc,MAAM,CAACF,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eAEFnB,OAAA;QAAOqB,OAAO,EAAC,YAAY;QAAAN,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrDnB,OAAA;QACEsB,IAAI,EAAC,UAAU;QACfC,EAAE,EAAC,YAAY;QACfC,KAAK,EAAEnB,UAAW;QAClBoB,QAAQ,EAAGb,CAAC,IAAKL,aAAa,CAACK,CAAC,CAACc,MAAM,CAACF,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eAEFnB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAACK,QAAQ,EAAEnB,SAAU;QAAAO,QAAA,EACvCP,SAAS,GAAG,YAAY,GAAG;MAAgB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,EAERV,KAAK,iBAAIT,OAAA;QAAG4B,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAAd,QAAA,EAAEN;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACjB,EAAA,CArCID,aAAa;EAAA,QACCJ,SAAS,EAC4DC,WAAW;AAAA;AAAAgC,EAAA,GAF9F7B,aAAa;AAuCnB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}