{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nimport { useNavigate } from \"react-router-dom\";\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const navigation = useNavigate();\n  const signup = async (email, password, repassword, name) => {\n    setIsLoading(true);\n    setError(null);\n    if (password !== repassword) {\n      setIsLoading(false);\n      setError('Passwords do not match');\n      return;\n    }\n    const response = await fetch('http://localhost:4000/user/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password,\n        name\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      // save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      // update the auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n\n      // update loading state\n      setIsLoading(false);\n      navigation('/');\n    }\n  };\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n_s(useSignup, \"QMYHDMBgEblOdjgwsGqr8gS48uE=\", false, function () {\n  return [useAuthContext, useNavigate];\n});","map":{"version":3,"names":["useState","useAuthContext","useNavigate","useSignup","_s","error","setError","isLoading","setIsLoading","dispatch","navigation","signup","email","password","repassword","name","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["D:/Mern folder/frontend/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from 'react'\r\nimport { useAuthContext } from './useAuthContext'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const useSignup = () => {\r\n  const [error, setError] = useState(null)\r\n  const [isLoading, setIsLoading] = useState(null)\r\n  const { dispatch } = useAuthContext()\r\n  const navigation = useNavigate();\r\n\r\n  const signup = async (email, password,repassword,name) => {\r\n    setIsLoading(true)\r\n    setError(null)\r\n\r\n    if (password !== repassword) {\r\n      setIsLoading(false)\r\n      setError('Passwords do not match')\r\n      return; \r\n    }\r\n\r\n    const response = await fetch('http://localhost:4000/user/signup', {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({ email, password ,name})\r\n    })\r\n    const json = await response.json()\r\n\r\n    if (!response.ok) {\r\n      setIsLoading(false)\r\n      setError(json.error)\r\n    }\r\n    if (response.ok) {\r\n      // save the user to local storage\r\n      localStorage.setItem('user', JSON.stringify(json))\r\n\r\n      // update the auth context\r\n      dispatch({type: 'LOGIN', payload: json})\r\n\r\n      // update loading state\r\n      setIsLoading(false)\r\n      navigation('/')\r\n    }\r\n  }\r\n\r\n  return { signup, isLoading, error }\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAES;EAAS,CAAC,GAAGR,cAAc,CAAC,CAAC;EACrC,MAAMS,UAAU,GAAGR,WAAW,CAAC,CAAC;EAEhC,MAAMS,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAACC,UAAU,EAACC,IAAI,KAAK;IACxDP,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAIO,QAAQ,KAAKC,UAAU,EAAE;MAC3BN,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAAC,wBAAwB,CAAC;MAClC;IACF;IAEA,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAChEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV,KAAK;QAAEC,QAAQ;QAAEE;MAAI,CAAC;IAC/C,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChBhB,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACiB,IAAI,CAAClB,KAAK,CAAC;IACtB;IACA,IAAIW,QAAQ,CAACQ,EAAE,EAAE;MACf;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAElD;MACAd,QAAQ,CAAC;QAACkB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEL;MAAI,CAAC,CAAC;;MAExC;MACAf,YAAY,CAAC,KAAK,CAAC;MACnBE,UAAU,CAAC,GAAG,CAAC;IACjB;EACF,CAAC;EAED,OAAO;IAAEC,MAAM;IAAEJ,SAAS;IAAEF;EAAM,CAAC;AACrC,CAAC;AAAAD,EAAA,CAzCYD,SAAS;EAAA,QAGCF,cAAc,EAChBC,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}