{"ast":null,"code":"var _s = $RefreshSig$();\n// In useUpdate hook\nimport { useState } from 'react';\nimport { Navigate, useNavigate } from \"react-router-dom\";\nexport const useForgot = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const navigation = useNavigate();\n  const {\n    dispatch\n  } = useAuthContext();\n  const handleForgot = async () => {\n    setEmail(e.target.value);\n  };\n  const PasswordForgot = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`http://localhost:4000/user/forgotPassword`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (!response.ok) {\n        throw new Error(data.error);\n      }\n\n      //successfull\n      setIsLoading(false);\n      setStatus(data.status);\n      alert('successfully');\n    } catch (error) {\n      setError(error.message);\n      setIsLoading(false);\n    }\n  };\n  return {\n    handleForgot,\n    isLoading,\n    error,\n    status\n  };\n};\n_s(useForgot, \"v2A41FQclb99PTpPWoUU7TVhjis=\", true, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["useState","Navigate","useNavigate","useForgot","_s","error","setError","status","setStatus","isLoading","setIsLoading","navigation","dispatch","useAuthContext","handleForgot","setEmail","e","target","value","PasswordForgot","response","fetch","method","headers","body","JSON","stringify","email","ok","Error","data","alert","message"],"sources":["D:/Mern folder/frontend/src/hooks/useForgot.js"],"sourcesContent":["// In useUpdate hook\r\nimport { useState } from 'react'\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nexport const useForgot = () => {\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigation = useNavigate();\r\n  const { dispatch } = useAuthContext()\r\n  \r\n\r\n  const handleForgot= async()=>{\r\n    setEmail(e.target.value);\r\n  }\r\n\r\n  const PasswordForgot= async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n\r\n    try {\r\n\r\n      const response = await fetch(`http://localhost:4000/user/forgotPassword`,{\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      \r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      //successfull\r\n      setIsLoading(false);\r\n      setStatus(data.status);\r\n\r\n      alert('successfully');\r\n      \r\n\r\n \r\n    } catch (error) {\r\n      setError(error.message);\r\n      setIsLoading(false);\r\n      \r\n    }\r\n  };\r\n\r\n  return { handleForgot, isLoading, error,status };\r\n};\r\n\r\n\r\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAKxD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMW,UAAU,GAAGT,WAAW,CAAC,CAAC;EAChC,MAAM;IAAEU;EAAS,CAAC,GAAGC,cAAc,CAAC,CAAC;EAGrC,MAAMC,YAAY,GAAE,MAAAA,CAAA,KAAS;IAC3BC,QAAQ,CAACC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,cAAc,GAAE,MAAAA,CAAA,KAAY;IAChCT,YAAY,CAAC,IAAI,CAAC;IAClBJ,QAAQ,CAAC,IAAI,CAAC;IAGd,IAAI;MAEF,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA0C,EAAC;QACvEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC;QAAM,CAAC;MAChC,CAAC,CAAC;MAIF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACC,IAAI,CAACzB,KAAK,CAAC;MAC7B;;MAEA;MACAK,YAAY,CAAC,KAAK,CAAC;MACnBF,SAAS,CAACsB,IAAI,CAACvB,MAAM,CAAC;MAEtBwB,KAAK,CAAC,cAAc,CAAC;IAIvB,CAAC,CAAC,OAAO1B,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAAC2B,OAAO,CAAC;MACvBtB,YAAY,CAAC,KAAK,CAAC;IAErB;EACF,CAAC;EAED,OAAO;IAAEI,YAAY;IAAEL,SAAS;IAAEJ,KAAK;IAACE;EAAO,CAAC;AAClD,CAAC;AAACH,EAAA,CA/CWD,SAAS;EAAA,QAIDD,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}