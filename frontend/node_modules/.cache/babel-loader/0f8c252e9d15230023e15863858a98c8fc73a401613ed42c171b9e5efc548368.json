{"ast":null,"code":"var _s2 = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nexport const useUpdate = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigation = useNavigate();\n  const Update = async (password, newpassword) => {\n    _s();\n    setIsLoading(true);\n    setError(null);\n    const [urlParams] = useSearchParams();\n    const userId = urlParams.get('id');\n    console.log(userId);\n    try {\n      const response = await fetch('http://localhost:4000/user/update/${userId}', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password,\n          newpassword\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error);\n      }\n\n      // Password updated successfully\n      setIsLoading(false);\n      navigation('/');\n    } catch (error) {\n      setError(error.message);\n      setIsLoading(false);\n    }\n  };\n  _s(Update, \"1S40YfM5fEAA0eT257A080macAI=\", false, function () {\n    return [useSearchParams];\n  });\n  return {\n    Update,\n    isLoading,\n    error\n  };\n};\n_s2(useUpdate, \"h6jwmqNCFNtqa5jr4Xvk9NJYk0M=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["useState","useNavigate","useSearchParams","useUpdate","_s2","_s","$RefreshSig$","error","setError","isLoading","setIsLoading","navigation","Update","password","newpassword","urlParams","userId","get","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message"],"sources":["D:/Mern folder/frontend/src/hooks/useUpdate.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useNavigate ,useSearchParams} from 'react-router-dom';\r\n\r\n  export const useUpdate = () => {\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigation = useNavigate();\r\n\r\n\r\n\r\n  const Update = async (password,newpassword) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    const [urlParams] = useSearchParams();\r\n    const userId = urlParams.get('id');\r\n    console.log(userId)\r\n  \r\n    \r\n    try {\r\n        const response = await fetch('http://localhost:4000/user/update/${userId}' ,{\r\n        method: 'PATCH',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ password , newpassword}),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      // Password updated successfully\r\n      setIsLoading(false);\r\n      navigation('/');\r\n    } catch (error) {\r\n      setError(error.message);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return { Update, isLoading, error };\r\n};\r\n\r\n\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,eAAe,QAAO,kBAAkB;AAE5D,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMW,UAAU,GAAGV,WAAW,CAAC,CAAC;EAIhC,MAAMW,MAAM,GAAG,MAAAA,CAAOC,QAAQ,EAACC,WAAW,KAAK;IAAAT,EAAA;IAC7CK,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IACd,MAAM,CAACO,SAAS,CAAC,GAAGb,eAAe,CAAC,CAAC;IACrC,MAAMc,MAAM,GAAGD,SAAS,CAACE,GAAG,CAAC,IAAI,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IAGnB,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAE;QAC5EC,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEb,QAAQ;UAAGC;QAAW,CAAC;MAChD,CAAC,CAAC;MAEF,MAAMa,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACpB,KAAK,CAAC;MAC7B;;MAEA;MACAG,YAAY,CAAC,KAAK,CAAC;MACnBC,UAAU,CAAC,GAAG,CAAC;IACjB,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACwB,OAAO,CAAC;MACvBrB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAACL,EAAA,CA5BIO,MAAM;IAAA,QAGUV,eAAe;EAAA;EA2BrC,OAAO;IAAEU,MAAM;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACrC,CAAC;AAACH,GAAA,CAtCaD,SAAS;EAAA,QAGHF,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}