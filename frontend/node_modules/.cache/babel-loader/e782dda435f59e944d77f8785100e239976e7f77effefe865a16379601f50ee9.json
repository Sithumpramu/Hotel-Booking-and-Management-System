{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst useForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const forgotPassword = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:4000/user/forgotPassword', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error);\n      }\n      setIsLoading(false);\n      // Handle success, maybe show a success message to the user\n    } catch (error) {\n      setError(error.message);\n      setIsLoading(false);\n    }\n  };\n  return {\n    email,\n    setEmail,\n    isLoading,\n    error,\n    forgotPassword\n  };\n};\n_s(useForgotPassword, \"RTF4HawABc6l0cbokb+G1t+Ygo0=\");\nexport default useForgotPassword;","map":{"version":3,"names":["useState","useForgotPassword","_s","email","setEmail","isLoading","setIsLoading","error","setError","forgotPassword","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message"],"sources":["D:/Mern folder/frontend/src/hooks/useForgot.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst useForgotPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const forgotPassword = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:4000/user/forgotPassword', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      setIsLoading(false);\r\n      // Handle success, maybe show a success message to the user\r\n    } catch (error) {\r\n      setError(error.message);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return { email, setEmail, isLoading, error, forgotPassword };\r\n};\r\n\r\nexport default useForgotPassword;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjCH,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;QACxEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEb;QAAM,CAAC;MAChC,CAAC,CAAC;MAEF,MAAMc,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACV,KAAK,CAAC;MAC7B;MAEAD,YAAY,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACc,OAAO,CAAC;MACvBf,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IAAEH,KAAK;IAAEC,QAAQ;IAAEC,SAAS;IAAEE,KAAK;IAAEE;EAAe,CAAC;AAC9D,CAAC;AAACP,EAAA,CAjCID,iBAAiB;AAmCvB,eAAeA,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}