{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport const useForgot = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('');\n  const forgotPassword = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:4000/user/forgotPassword', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error);\n      }\n      setIsLoading(false);\n      setStatus(data.status);\n    } catch (error) {\n      setError(error.message);\n      setIsLoading(false);\n    }\n  };\n  return {\n    setEmail,\n    isLoading,\n    error,\n    forgotPassword,\n    status\n  };\n};\n_s(useForgot, \"pZvbz3y/61aDE/aKnvFV0wSU4Dw=\");","map":{"version":3,"names":["useState","useForgot","_s","email","setEmail","isLoading","setIsLoading","error","setError","status","setStatus","forgotPassword","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message"],"sources":["D:/Mern folder/frontend/src/hooks/useForgot.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nexport const useForgot= () => {\r\n  const [email, setEmail] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState('');\r\n  const forgotPassword = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:4000/user/forgotPassword', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      setIsLoading(false);\r\n      setStatus(data.status);\r\n    } catch (error) {\r\n      setError(error.message);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return {  setEmail, isLoading, error, forgotPassword,status };\r\n};\r\n\r\n\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,SAAS,GAAEA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjCL,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;QACxEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEf;QAAM,CAAC;MAChC,CAAC,CAAC;MAEF,MAAMgB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACZ,KAAK,CAAC;MAC7B;MAEAD,YAAY,CAAC,KAAK,CAAC;MACnBI,SAAS,CAACS,IAAI,CAACV,MAAM,CAAC;IACxB,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACgB,OAAO,CAAC;MACvBjB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IAAGF,QAAQ;IAAEC,SAAS;IAAEE,KAAK;IAAEI,cAAc;IAACF;EAAO,CAAC;AAC/D,CAAC;AAACP,EAAA,CAjCWD,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}